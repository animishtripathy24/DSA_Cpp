class Solution {
  private:
    int solve(vector<int>&wt,vector<int>&val,int W,int n)
    {
        //base case
        if(n == 0 || W == 0)
        {
            return 0;
        }
        if(wt[n-1] <= W)
        {
            //we have two choices
            //whether we can take it or reject it
            //the max profit out of the two choices is returned
            return max((val[n-1] + solve(wt,val,W-wt[n-1],n-1)),solve(wt,val,W,n-1));
        }
        if(wt[n-1] > W)
        {
            return solve(wt,val,W,n-1);
        }
    }
  public:
    // Function to return max value that can be put in knapsack of capacity W.
    int knapSack(int W, vector<int>& wt, vector<int>& val) {
        int n = wt.size();
        return solve(wt,val,W,n);
    }
};
