class Solution {
public:
    bool isIsomorphic(string s, string t) {
        unordered_map<char,vector<int>>m1;
        unordered_map<char,vector<int>>m2;

        for(int i=0;i<s.size();i++)
        {
            m1[s[i]].push_back(i);
        }

        for(int i=0;i<t.size();i++)
        {
            m2[t[i]].push_back(i);
        }

        priority_queue<pair<int,vector<int>>,vector<pair<int,vector<int>>>,greater<pair<int,vector<int>>>>ps;
        priority_queue<pair<int,vector<int>>,vector<pair<int,vector<int>>>,greater<pair<int,vector<int>>>>pt;

        for(auto &it:m1)
        {
            ps.push({it.second.size(),it.second});
        }

        for(auto &it:m2)
        {
            pt.push({it.second.size(),it.second});
        }

        while (!ps.empty() || !pt.empty())
        {
            if(ps.top() != pt.top())
            {
                return 0;
            }
            ps.pop();
            pt.pop();
        }
        return 1;
    }
};
