/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    bool solve(TreeNode* &curr1,TreeNode* &curr2)
    {
        if(curr1== NULL && curr2!=NULL)
        {
            return 0;
        }
        if(curr1!=NULL && curr2==NULL)
        {
            return 0;
        }
        if(curr1==NULL && curr2==NULL)
        {
            return 1;
        }
        if(curr1->val != curr2->val)
        {
            return 0;
        }
        bool left=solve(curr1->left,curr2->right);
        if(left==false)
        {
            return 0;
        }
        int right=solve(curr1->right,curr2->left);
        if(right==false)
        {
            return 0;
        }
        return 1;
    }
public:
    bool isSymmetric(TreeNode* root) {
        if(!root->left && !root->right)
        {
            return 1;
        }
        if(!root->left && root->right)
        {
            return 0;
        }
        if(root->left && !root->right)
        {
            return 0;
        }
        TreeNode* curr1=root->left;
        TreeNode* curr2=root->right;
        return solve(curr1,curr2);
    }
};
