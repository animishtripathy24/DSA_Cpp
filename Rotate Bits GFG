class Solution
{
    private:
        vector<int> convertBinary(int n)
        {
            vector<int>v;
            while(n!=0)
            {
                //checking the last bit
                if(n&1)
                {
                    v.push_back(1);
                }
                else
                {
                    v.push_back(0);
                }
                n=n>>1;
            }
            int size=v.size();
            for(int i=0;i<16-size;i++)
            {
                v.push_back(0);
            }
            return v;
        }
        int binaryToDecimal(vector<int>&v)
        {
            int j=0;
            int sum=0;
            for(int i=v.size()-1;i>=0;i--)
            {
                sum+=v[i]*pow(2,j);
                j++;
            }
            return sum;
        }
  public:
        vector <int> rotate (int n, int d)
        {
            vector<int>binary=convertBinary(n);
            reverse(binary.begin(),binary.end());
            vector<int> binary2=binary;
            d=d%binary.size();
            reverse(binary.begin(),binary.begin()+d);
            reverse(binary.begin()+d,binary.end());
            reverse(binary.begin(),binary.end());
            int n1=binaryToDecimal(binary);
            d=binary2.size()-d;
            reverse(binary2.begin(),binary2.begin()+d);
            reverse(binary2.begin()+d,binary2.end());
            reverse(binary2.begin(),binary2.end());
            int n2=binaryToDecimal(binary2);
            vector<int>ans;
            ans.push_back(n1);
            ans.push_back(n2);
            return ans;
        }
};
