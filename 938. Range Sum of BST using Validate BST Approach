/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    bool valid(TreeNode* root,long int minValue,long int maxValue,int low,int high,int &sum)
    {
        if(root == NULL)
        {
            return 1;
        }
        if(root ->val <= minValue || root->val >= maxValue)
        {
            return 0;
        }
        if(root->val >=low && root->val <=high)
        {
            sum+=root->val;
        }
        return valid(root->left,minValue,root->val,low,high,sum) && valid(root->right,root->val,maxValue,low,high,sum);
    }
public:
    int rangeSumBST(TreeNode* root, int low, int high) {
        int sum=0;
        valid(root,INT_MIN,INT_MAX,low,high,sum);
        return sum;
    }
};
