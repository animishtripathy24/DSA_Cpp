class Solution
{
	public:
	//Function to find the shortest distance of all the vertices
    //from the source vertex S.
    vector <int> dijkstra(int V, vector<vector<int>> adj[], int S)
    {
        set<pair<int,int>>s; //{node,distance}
        s.insert({0,S});
        vector<int>dist(V,1e9);
        dist[S]=0;
        while(!s.empty())
        {
            auto it = *(s.begin());
            int distance=it.first;
            int node=it.second;
            s.erase(it);
            
            for(auto &it:adj[node])
            {
                int adjNode=it[0];
                int adjDist=it[1];
                
                if(distance+adjDist<dist[adjNode])
                {
                    if(dist[adjNode]!=1e9)
                    {
                        //if someone has reached before then update
                        s.erase({dist[adjNode],adjNode});
                    }
                    dist[adjNode]=distance+adjDist;
                    s.insert({dist[adjNode],adjNode});
                }
            }
        }
        return dist;
    }
};
