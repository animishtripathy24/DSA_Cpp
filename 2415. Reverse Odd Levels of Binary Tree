/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    void solve(TreeNode* root1,TreeNode* root2,int &count)
    {
        if(!root1)
        {
            return;
        }
        if((count & 1)==0)
        {
            swap(root1->val,root2->val);
        }
        count=count+1;
        solve(root1->left,root2->right,count);
        solve(root1->right,root2->left,count); 
        count=count-1;
    }
public:
    TreeNode* reverseOddLevels(TreeNode* root) {
        int count=0;
        solve(root->left,root->right,count);
        return root;
    }
};
