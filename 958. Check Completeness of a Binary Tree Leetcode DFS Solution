ANIMISH TRIPATHY

Details:
Solution: C++
Runtime: 0 ms
Beat: 100%
Memory: 10.3 MB
Beats: 87.45%

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    int countNodes(TreeNode* root)
    {
        if(root==NULL)
        {
            return 0;
        }
        else
        {
            return 1 + countNodes(root->left) + countNodes(root->right);
        }
    }
    bool isCBT(TreeNode* root,int index,int &nodeCount)
    {
        if(root==NULL)
        {
            return 1;
        }
        if(index>=nodeCount)
        {
            return 0;
        }
        else
        {
            bool left=isCBT(root->left,2*index+1,nodeCount);
            bool right=isCBT(root->right,2*index+2,nodeCount);
            return (left && right);
        }
    }
public:
    bool isCompleteTree(TreeNode* root) {
        int nodeCount=countNodes(root);
        int index=0;
        if(isCBT(root,index,nodeCount))
        {
            return 1;
        }
        return 0;
        
    }
};
