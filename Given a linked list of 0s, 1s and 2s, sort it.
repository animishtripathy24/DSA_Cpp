class Solution
{
    public:
    void insertAtTail(Node* &tail,Node* curr)
    {
        tail->next=curr;
        tail=curr;
    }
    //Function to sort a linked list of 0s, 1s and 2s.
    Node* segregate(Node *head) {
        
        Node* zeroHead= new Node(-1);
        Node* oneHead= new Node(-1);
        Node* twoHead= new Node(-1);
        
        Node* zero=zeroHead;
        Node* one=oneHead;
        Node* two=twoHead;
        
        Node* curr=head;
        
        while(curr != NULL)
        {
            if(curr->data==0)
            {
                insertAtTail(zero,curr);
            }
            else if(curr->data==1)
            {
                insertAtTail(one,curr);
            }
            else if(curr->data==2)
            {
                insertAtTail(two,curr);
            }
            curr=curr->next;
        }
        
        //for merging we have to perform..
        if(oneHead->next != NULL)
        {
            zero->next=oneHead->next;
        }
        else
        {
            zero->next=twoHead->next;
        }
        one->next=twoHead->next;
        two->next=NULL;
        
        //setup the headl
        Node* res=zeroHead->next;
        
        zeroHead->next=NULL;
        oneHead->next=NULL;
        twoHead->next=NULL;
        
        delete zeroHead;
        delete oneHead;
        delete twoHead;
        
        
        return res;
        
    }
};
