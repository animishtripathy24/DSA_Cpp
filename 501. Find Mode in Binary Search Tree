/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    void solve(TreeNode* root,map<int,int>&m)
    {
        if(!root)
        {
            return;
        }
        m[root->val]++;
        solve(root->left,m);
        solve(root->right,m);
        return;
    }
public:
    vector<int> findMode(TreeNode* root) {
        map<int,int>m;
        solve(root,m);
        int maxi=INT_MIN;
        for(auto &it:m)
        {
            maxi=max(maxi,it.second);
        }
        vector<int>ans;
        for(auto &it:m)
        {
            if(maxi == it.second)
            {
                ans.push_back(it.first);
            }
        }
        return ans;
        
    }
};
