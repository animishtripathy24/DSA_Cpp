/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
private:
    void bfs(Node* root,int &count)
    {
        queue<Node*>q;
        q.push(root);
        while(!q.empty())
        {
            int size=q.size();
            count++;
            for(int i=0;i<size;i++)
            {
                Node* curr=q.front();
                q.pop();
                for(int i=0;i<curr->children.size();i++)
                {
                    q.push(curr->children[i]);
                }
            }
        }
    }
public:
    int maxDepth(Node* root) {
        if(root == NULL)
        {
            return {};
        }
        int count=0;
        bfs(root,count);
        return count;
    }
};
