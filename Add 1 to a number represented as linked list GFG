
/* 

struct Node
{
    int data;
    struct Node* next;
    
    Node(int x){
        data = x;
        next = NULL;
    }
};

*/

class Solution
{
    private:
        Node* reverse(Node* head)
        {
            Node* curr=head;
            Node* next=NULL;
            Node* prev=NULL;
            while(curr != NULL)
            {
                next=curr->next;
                curr->next=prev;
                prev=curr;
                curr=next;
            }
            return prev;
        }
    public:
    Node* addOne(Node *head) 
    {
        //at first we have to reverse the linked list
        head=reverse(head);
        //we do not have to alter the head
        Node* temp=head;
        int carry=1;
        while(temp != NULL)
        {
            temp->data=temp->data+carry;
            if(temp->data < 10)
            {
                carry=0;
                break;
            }
            else
            {
                carry=1;
                temp->data=0;
            }
            temp=temp->next;
        }
        if(carry==1)
        {
            Node* newNode=new Node(1);
            head=reverse(head);
            newNode->next=head;
            return newNode;
        }
        head=reverse(head);
        return head;
    }
};
