/* A binary tree node

struct Node
{
    int data;
    struct Node* left;
    struct Node* right;

    Node(int x){
        data = x;
        left = right = NULL;
    }
};
 */

class Solution
{
  private:
    bool identical(Node* root1,Node* root2)
    {
        if(!root1 && !root2)
        {
            return 1;
        }
        if(!root1 || !root2)
        {
            return 0;
        }
        
        return (root1->data==root2->data) && identical(root1->left,root2->left) && identical(root1->right,root2->right);
    }
  public:
    //Function to check if S is a subtree of tree T.
    bool isSubTree(Node* T, Node* S) 
    {
        if(!S) return true;
        if(!T) return false;
        
        if(identical(T,S))
        {
            return true;
        }
        
        return isSubTree(T->left,S) || isSubTree(T->right,S);
        
    }
};
