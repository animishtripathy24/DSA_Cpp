class Solution {
public:
    long long maximumImportance(int n, vector<vector<int>>& roads) {
        vector<long long>indegree(n,0);
        for(auto &it:roads)
        {
            indegree[it[0]]++;
            indegree[it[1]]++;
        }
        //now we have to declare a priority_queue(min heap)
        priority_queue<pair<long long,long long>,vector<pair<long long,long long>>,greater<pair<long long,long long>>>pq;
        map<long long,long long>m;
        for(int i=0;i<indegree.size();i++)
        {
            pq.push({indegree[i],i});
        }
        long long int index=1;
        while(!pq.empty())
        {
            auto it=pq.top();
            pq.pop();
            m[it.second]=index;
            index++;
        }
        long long int sum=0LL;
        for(auto &it:roads)
        {
            long long a=m[it[0]];
            long long b=m[it[1]];
            sum+=a;
            sum+=b;
        }
        return sum;
    }
};
