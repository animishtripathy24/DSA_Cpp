/*Complete the function below
Node is as follows
struct Node {
    int data;
    Node *left;
    Node *right;

    Node(int val) {
        data = val;
        left = right = NULL;
    }
};
*/

class Solution{
  public:
    // root : the root Node of the given BST
    // target : the target sum
    void solve(Node* root,vector<int>&ans)
    {
        if(root==NULL)
        {
            return;
        }
        solve(root->left,ans);
        ans.push_back(root->data);
        solve(root->right,ans);
    }
    int isPairPresent(struct Node *root, int target)
    {
        vector<int>ans;
        solve(root,ans);
        int i=0;
        int j=ans.size()-1;
        int count=0;
        while(i<j)
        {
            int sum=ans[i]+ans[j];
            if(sum == target)
            {
                count++;
                i++;
                j--;
            }
            else if(sum < target)
            {
                i++;
            }
            else
            {
                j--;
            }
            
        }
        if(count >= 1)
        {
            return 1;
        }
        return 0;
    }
};
