/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    void solve(TreeNode* root,int &count,unordered_map<int,int>&m)
    {
        if(root==NULL)
        {
            return;
        }
        m[root->val]++;
        if(root->left == NULL && root->right==NULL)
        {
            int count_one=0;
            for(auto &value:m)
            {
                if(value.second%2 == 1)
                {
                    count_one++;
                }
            }
            if(count_one <= 1 )
            {
                count++;
            } 

        }
        solve(root->left,count,m);
        solve(root->right,count,m);
        m[root->val]--;
    }
public:
    int pseudoPalindromicPaths (TreeNode* root) {
        if(root==NULL)
        {
            return 0;
        }
        int count=0;
        unordered_map<int,int>m;
        solve(root,count,m);
        return count;
    }
};
