/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
private:
    int getLength(ListNode* head)
    {
        int count=0;
        ListNode* curr=head;
        while(curr != NULL)
        {
            count++;
            curr=curr->next;
        }
        return count;
    }
public:
    ListNode*  solve(ListNode* head,int len,int k)
    {
        if(len < k)
        {
            return head;
        }
        ListNode* curr=head;
        ListNode* prev=NULL;
        ListNode* next=NULL;
        int count=0;
        while(curr != NULL && count < k)
        {
            next=curr->next;
            curr->next=prev;
            prev=curr;
            curr=next;
            count++;
        }

        if(next != NULL)
        {
            head->next=solve(next,len-k,k);
        }
        return prev;

    }
    ListNode* swapPairs(ListNode* head) {
        if(!head || !head->next)
        {
            return head;
        }
        int len=getLength(head);
        return solve(head,len,2);
    }
};
