/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        //step-1 creating of all the copy nodes
        Node* iter=head;
        Node* front=head;
        
        while(iter != NULL)
        {
            front=iter->next;
            Node* copy=new Node(iter->val);
            iter->next=copy;
            copy->next=front;
            iter=front;
        }
        
        //step-2 assigning of all the random pointers
        
        Node* iter1=head;
        while(iter1 != NULL)
        {
            if(iter1->random != NULL)
            {
                iter1->next->random=iter1->random->next;
            }
            iter1=iter1->next->next;
        }
        
        // Third round: restore the original list, and extract the copy list.
          iter = head;
          Node *pseudoHead = new Node(0);
          Node *copy = pseudoHead;

          while (iter != NULL) {
            front = iter->next->next;

            // extract the copy
            copy->next = iter->next;

            // restore the original list
            iter->next = front;
              
            copy = copy -> next; 
            iter = front;
          }

          return pseudoHead->next;
        
    }
};
