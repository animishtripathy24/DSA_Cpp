class Solution {
private:
    int getLength(ListNode* head)
    {
        ListNode* curr=head;
        int count=0;
        while(curr != NULL)
        {
            count++;
            curr=curr->next;
        }
        return count;
    }
public:

    ListNode* kReverse(ListNode* &head,int k,int len)
    {
        //base case rukhna kab hai..
        if(len < k)
        {
            return head;
        }

        int count=0;
        ListNode* current=head;
        ListNode* prev=NULL;
        ListNode* next=NULL;

        while(current != NULL && count < k)
        {
            next=current->next;
            current->next=prev;
            prev=current;
            current=next;
            count++;
        }

        if(next != NULL)
        {
            head->next=kReverse(next,k,len-k);
        }

        return prev;

    }
    ListNode* reverseKGroup(ListNode* head, int k) {
        int len=getLength(head);
        return kReverse(head,k,len);
    }
};
