/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    void solve(TreeNode* root,int &sum,bool check)
    {
        if(root == NULL)
        {
            return;
        }
        //if check is true and it is a leaf node then it must be a left leaves
        if((root->left == NULL) && (root->right == NULL) && check)
        {
            sum+=root->val;
        }
        //each time we move left we will make the check value as true
        solve(root->left,sum,true);
        //each time we move right we will make the check value as false
        solve(root->right,sum,false);
        return;
    }
public:
    int sumOfLeftLeaves(TreeNode* root) {
        if((root== NULL) || ((!root->left) && (!root->right)))
        {
            return 0;
        }
        bool check = false;
        int sum = 0;
        solve(root,sum,check);
        return sum;
    }
};
