/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
private:
    ListNode* getTail(ListNode* head)
    {
        ListNode* curr=head;
        while(curr->next != NULL)
        {
            curr=curr->next;
        }
        return curr;
    }
public:
    ListNode* mergeInBetween(ListNode* list1, int a, int b, ListNode* list2) {
        ListNode* l2tail=getTail(list2);
        ListNode* curr=list1;
        int c1=0;
        while(curr!= NULL &&  c1 != (a-1))
        {
            curr=curr->next;
            c1++;
        }
        ListNode* curr1=list1;
        int c2=0;
        while( curr1 != NULL && c2<b)
        {
            curr1 = curr1->next;
            c2++;
        }
        curr->next=list2;
        if(curr1)l2tail->next=curr1->next;
        else l2tail->next=NULL;
        return list1;
    }
};
