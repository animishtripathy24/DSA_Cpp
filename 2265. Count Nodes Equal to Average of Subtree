/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    void solve(TreeNode* &root,int &sum ,int &cnt)
    {
        if(root==NULL)
        {
            return;
        }
        sum+=root->val;
        cnt++;
        solve(root->left,sum,cnt);
        solve(root->right,sum,cnt);
        return;
    }
public:
    void solveAvg(TreeNode* &root,int &count)
    {
        if(root==NULL)
        {
            return;
        }
        int sum = 0;
        int cnt=0;
        solve(root,sum,cnt);
        if(floor(sum /cnt) == root->val)
        {
            count++;
        }
        solveAvg(root->left,count);
        solveAvg(root->right,count);
    }
    int averageOfSubtree(TreeNode* root) {
        if(root==NULL)
        {
            return 0;
        }
        int count = 0;
        solveAvg(root,count);
        return count;
    }
};
