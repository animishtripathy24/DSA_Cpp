/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    static bool ignore_case(int a, int b)
    {
        return (a<=b);
    }
    void solve(TreeNode* root,vector<int>&inorder)
    {
        if(!root)
        {
            return;
        }
        solve(root->left,inorder);
        inorder.push_back(root->val);
        solve(root->right,inorder);
    }
    bool isValidBST(TreeNode* root) {
        if(!root)
        {
            return 0;
        }
        vector<int>inorder;
        solve(root,inorder);
        if(is_sorted(inorder.begin(),inorder.end(),ignore_case))
        {
            return 1;
        }
        return 0;
        
    }
};
